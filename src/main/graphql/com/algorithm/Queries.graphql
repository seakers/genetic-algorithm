query OrbitCount($problem_id: Int!){
    item: Join__Problem_Orbit_aggregate(where: {problem_id: {_eq: $problem_id}}) {
        aggregate {
            count
        }
    }
}


query InstrumentCount($problem_id: Int!){
    item: Join__Problem_Instrument_aggregate(where: {problem_id: {_eq: $problem_id}}) {
        aggregate {
            count
        }
    }
}


#query Orbit($problem_id: Int!){
#    items: Join__Orbit_Attribute(where: {problem_id: {_eq: $problem_id}}, distinct_on: [orbit_id]) {
#        id
#        Problem {
#            name
#        }
#        orbit: Orbit {
#            name
#        }
#    }
#}


query ArchitectureSubscription($problem_id: Int!, $dataset_id: Int!, $input: String!){
    items: Architecture_aggregate(where: {problem_id: {_eq: $problem_id}, dataset_id: {_eq: $dataset_id} input: {_eq: $input}})  {
        aggregate { count }
    }
}


query SingleArchitecture($problem_id: Int!, $dataset_id: Int!, $input: String!) {
    items: Architecture (where: {problem_id: {_eq: $problem_id}, dataset_id: {_eq: $dataset_id}, input: {_eq: $input}})  {
        id input science cost
    }
}


query Architecture($problem_id: Int!, $dataset_id: Int!) {
    items: Architecture(where: {problem_id: {_eq: $problem_id}, dataset_id: {_eq: $dataset_id}, eval_status: {_eq: true}}) {
        id
        input
        science
        cost
    }
}

mutation MarkArchitectureAsImprovingHV($id: Int! = 10) {
  update_Architecture_by_pk(pk_columns: {id: $id}, _set: {improve_hv: true}) {
    id
    improve_hv
  }
}

mutation DeleteNonImprovingArchitectures($dataset_id: Int = 10) {
  delete_SubobjectiveScoreExplanation(where: {Architecture: {dataset_id: {_eq: $dataset_id}, ga: {_eq: true}, improve_hv: {_eq: false}}}) {
    affected_rows
  }
  delete_ObjectiveScoreExplanation(where: {Architecture: {dataset_id: {_eq: $dataset_id}, ga: {_eq: true}, improve_hv: {_eq: false}}}) {
    affected_rows
  }
  delete_PanelScoreExplanation(where: {Architecture: {dataset_id: {_eq: $dataset_id}, ga: {_eq: true}, improve_hv: {_eq: false}}}) {
    affected_rows
  }
  delete_ArchitectureScoreExplanation(where: {Architecture: {dataset_id: {_eq: $dataset_id}, ga: {_eq: true}, improve_hv: {_eq: false}}}) {
    affected_rows
  }
  delete_ArchitectureBudget(where: {ArchitectureCostInformation: {Architecture: {dataset_id: {_eq: $dataset_id}, ga: {_eq: true}, improve_hv: {_eq: false}}}}) {
    affected_rows
  }
  delete_ArchitecturePayload(where: {ArchitectureCostInformation: {Architecture: {dataset_id: {_eq: $dataset_id}, ga: {_eq: true}, improve_hv: {_eq: false}}}}) {
    affected_rows
  }
  delete_ArchitectureCostInformation(where: {Architecture: {dataset_id: {_eq: $dataset_id}, ga: {_eq: true}, improve_hv: {_eq: false}}}) {
    affected_rows
  }
  delete_Architecture(where: {dataset_id: {_eq: $dataset_id}, improve_hv: {_eq: false}, ga: {_eq: true}}) {
    affected_rows
  }
}
